user       nginx;
worker_processes  auto;
error_log  /dev/stdout;
pid        /var/log/nginx/nginx.pid;
worker_rlimit_nofile 8192;

events {
	worker_connections  4096;  ## Default: 1024, [NeXTGEN] x4 because we don't know how many connection will be initializated with Sonarqube
}

http {
	client_max_body_size 200M;    ## Default 1M, [NeXTGEN] We allow up to 50000mb file because we had some problem while transfering Mercurial repos over a new server

	log_format   main '$remote_addr - $remote_user [$time_local]  $status '
	'$ssl_protocol/$ssl_cipher '
	'"$request" $body_bytes_sent "$http_referer" '
	'"$http_user_agent" "$http_x_forwarded_for"';

	proxy_send_timeout 120;
	proxy_read_timeout 300;
	proxy_buffering off;
	keepalive_timeout 5 5;
	tcp_nodelay on;

	upstream integration {
		server integration:5601;
	}

	server {
		listen 80;
		client_max_body_size 2G;
		server_name localhost;
		rewrite ^/(.*) https://royzhao/$1 permanent;
	}

	server {
		listen          443 ssl;
		server_name     localhost;
		access_log      /var/log/nginx/nignx.access.log main;
		client_max_body_size 2G;
		ssl_ciphers ALL:!aNULL:!ADH:!eNULL:!LOW:!EXP:RC4+RSA:+HIGH:+MEDIUM;
		ssl_protocols TLSv1.2 TLSv1.3;
		ssl_certificate         /etc/nginx/ssl/certificate.crt;
		ssl_certificate_key     /etc/nginx/ssl/private.key;

        # Enable OCSP stapling (Default: off)
        ssl_stapling on;
        # Enables verification of client certificates (Default: off)
        ssl_stapling_verify on;
        # Specify chain of trust of OCSP response using Root CA and Intermediate certs
        ssl_trusted_certificate /etc/nginx/ssl/ca.crt;
                # Specify resolver for a resolution of the OCSP responder hostname
#                resolver 10.247.241.2 valid=86400;


		location / {
			proxy_pass http://integration-service:8080;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection 'upgrade';
			proxy_set_header Host $host;
			proxy_cache_bypass $http_upgrade;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto "https";
		}
	}
}